<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dev-Deck // Admin Control</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"/>
    <style> body { background-color: #0d1117; color: #c9d1d9; font-family: 'Inter', sans-serif; } /* Reuse styles from index.html */ .input-field { background-color: #0d1117; border: 1px solid #30363d; } .input-field:focus { outline: none; border-color: #3b82f6; } </style>
</head>
<body class="p-4 md:p-8">

    <div id="adminLogin" class="max-w-md mx-auto mt-20">
        <h1 class="text-3xl font-bold text-center text-blue-400 mb-6">Admin Authentication</h1>
        <input type="text" id="adminUser" placeholder="Username" class="input-field w-full rounded-lg px-4 py-3 mb-4"><input type="password" id="adminPass" placeholder="Password" class="input-field w-full rounded-lg px-4 py-3"><button id="adminLoginBtn" class="mt-4 w-full bg-blue-600 text-white font-bold py-2 rounded-lg">Authenticate</button><p id="adminError" class="text-red-500 mt-2 text-center h-4"></p>
    </div>

    <div id="adminPanel" class="hidden container mx-auto">
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl font-bold text-blue-400">Admin Dashboard</h1>
            <div id="toast" class="bg-green-500 text-white py-2 px-5 rounded-lg shadow-lg opacity-0 transition-all duration-300"></div>
        </div>
        
        <div class="grid md:grid-cols-3 gap-6 mb-8">
            <div class="bg-gray-900 p-4 rounded-lg border border-gray-800"><p class="text-gray-400">Total Resources</p><h2 id="stat-resources" class="text-3xl font-bold">0</h2></div>
            <div class="bg-gray-900 p-4 rounded-lg border border-gray-800"><p class="text-gray-400">User Logins</p><h2 id="stat-logins" class="text-3xl font-bold">0</h2></div>
            <div class="bg-gray-900 p-4 rounded-lg border border-gray-800"><p class="text-gray-400">Admin Logins</p><h2 id="stat-admin-logins" class="text-3xl font-bold">0</h2></div>
        </div>
        
        <div class="bg-gray-900 p-6 rounded-lg border border-gray-800 mb-8">
            <h2 class="text-xl font-bold mb-4">Site Settings</h2>
            <div class="grid md:grid-cols-2 gap-6">
                <div><label class="font-bold">User Access Code</label><div class="flex gap-2 mt-2"><input id="accessCodeSetting" type="text" class="input-field w-full p-2 rounded"><button id="saveAccessCodeBtn" class="bg-blue-600 text-white px-4 rounded">Save</button></div></div>
                <div><label class="font-bold">Live Drop Banner</label><div class="flex items-center gap-4 mt-2"><input id="liveDropMsg" type="text" class="input-field w-full p-2 rounded" placeholder="Banner message..."><div class="flex items-center gap-2"><input id="liveDropActive" type="checkbox" class="h-5 w-5"><label for="liveDropActive">Active</label></div><button id="saveLiveDropBtn" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button></div></div>
            </div>
        </div>

        <div class="grid lg:grid-cols-5 gap-8">
            <div class="lg:col-span-2 bg-gray-900 p-6 rounded-lg border border-gray-800 h-fit">
                <h2 id="formTitle" class="text-xl font-bold mb-4">Add New Resource</h2>
                <form id="resourceForm" class="space-y-4">
                    <input id="resId" type="hidden"><input id="resTitle" type="text" placeholder="Title" class="input-field w-full p-2 rounded" required><select id="resCategory" class="input-field w-full p-2 rounded" required><option value="downloader">Downloader</option><option value="ai">AI</option><option value="code">Code</option><option value="api">API</option><option value="bins">BIN</option></select><input id="resIcon" type="text" placeholder="FontAwesome Icon (e.g., fa-brands fa-spotify)" class="input-field w-full p-2 rounded" required><textarea id="resDesc" placeholder="Description" class="input-field w-full p-2 rounded" required></textarea><textarea id="resContent" placeholder="Content (API URL, BIN, etc.)" class="input-field w-full p-2 rounded" required></textarea><input id="resDownloadUrl" type="text" placeholder="Download URL (Optional, null if empty)" class="input-field w-full p-2 rounded"><div class="flex items-center gap-2"><input id="resPremium" type="checkbox" class="h-5 w-5"><label for="resPremium">Premium?</label></div>
                    <div class="flex gap-4"><button type="submit" class="w-full bg-blue-600 text-white font-bold py-2 rounded">Save Resource</button><button type="button" id="clearFormBtn" class="w-full bg-gray-600 text-white font-bold py-2 rounded">Clear</button></div>
                </form>
            </div>
            <div class="lg:col-span-3">
                <h2 class="text-xl font-bold mb-4">Manage Resources</h2><div id="manageResourceList" class="space-y-3"></div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const $ = (selector) => document.querySelector(selector);
            let state = { resources: [], settings: {}, stats: {} };

            const showToast = (message) => {
                $('#toast').textContent = message;
                $('#toast').classList.remove('opacity-0');
                setTimeout(() => $('#toast').classList.add('opacity-0'), 3000);
            };

            const handleLogin = async () => {
                const response = await fetch('/admin/login', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ user: $('#adminUser').value, pass: $('#adminPass').value })
                });
                if (response.ok) {
                    $('#adminLogin').classList.add('hidden');
                    $('#adminPanel').classList.remove('hidden');
                    loadDashboardData();
                } else {
                    $('#adminError').textContent = 'Invalid Credentials';
                }
            };
            $('#adminLoginBtn').addEventListener('click', handleLogin);

            const loadDashboardData = async () => {
                const response = await fetch('/api/data');
                const data = await response.json();
                state = data;
                renderDashboard();
            };

            const renderDashboard = () => {
                $('#stat-resources').textContent = state.resources.length;
                $('#stat-logins').textContent = state.stats.logins;
                $('#stat-admin-logins').textContent = state.stats.admin_logins;
                $('#accessCodeSetting').value = state.settings.access_code;
                $('#liveDropMsg').value = state.settings.live_drop.message;
                $('#liveDropActive').checked = state.settings.live_drop.active;
                
                const list = $('#manageResourceList');
                list.innerHTML = '';
                state.resources.forEach(res => {
                    const item = document.createElement('div');
                    item.className = 'bg-gray-800 p-3 rounded flex justify-between items-center';
                    item.innerHTML = `<p>${res.title} <span class="text-xs ${res.premium ? 'text-yellow-400' : 'text-green-400'}">${res.premium ? 'Premium' : 'Free'}</span></p><div class="flex gap-2"><button data-id="${res.id}" class="edit-btn bg-yellow-500 text-black px-3 py-1 rounded text-sm">Edit</button><button data-id="${res.id}" class="delete-btn bg-red-600 text-white px-3 py-1 rounded text-sm">Delete</button></div>`;
                    list.appendChild(item);
                });
            };

            $('#resourceForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const id = parseInt($('#resId').value);
                const resource = {
                    id: id || null,
                    title: $('#resTitle').value, category: $('#resCategory').value,
                    icon_class: $('#resIcon').value, description: $('#resDesc').value,
                    content: $('#resContent').value,
                    download_url: $('#resDownloadUrl').value || null,
                    premium: $('#resPremium').checked,
                };
                const response = await fetch('/admin/resource', {
                    method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(resource)
                });
                if (response.ok) {
                    showToast(`Resource ${id ? 'updated' : 'added'}!`);
                    clearForm();
                    loadDashboardData();
                }
            });

            const clearForm = () => {
                $('#formTitle').textContent = 'Add New Resource';
                $('#resourceForm').reset();
                $('#resId').value = '';
            };
            $('#clearFormBtn').addEventListener('click', clearForm);

            $('#manageResourceList').addEventListener('click', (e) => {
                const id = parseInt(e.target.dataset.id);
                if (e.target.classList.contains('edit-btn')) {
                    const resToEdit = state.resources.find(r => r.id === id);
                    $('#formTitle').textContent = `Edit: ${resToEdit.title}`;
                    $('#resId').value = resToEdit.id;
                    $('#resTitle').value = resToEdit.title;
                    $('#resCategory').value = resToEdit.category;
                    $('#resIcon').value = resToEdit.icon_class;
                    $('#resDesc').value = resToEdit.description;
                    $('#resContent').value = resToEdit.content;
                    $('#resDownloadUrl').value = resToEdit.download_url;
                    $('#resPremium').checked = resToEdit.premium;
                }
                if (e.target.classList.contains('delete-btn')) {
                    if (confirm('Are you sure you want to delete this?')) {
                        fetch(`/admin/resource/${id}`, { method: 'DELETE' }).then(res => {
                            if (res.ok) { showToast('Resource deleted!'); loadDashboardData(); }
                        });
                    }
                }
            });

            const saveSettings = async (payload) => {
                const response = await fetch('/admin/settings', {
                    method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(payload)
                });
                if (response.ok) showToast('Settings saved!');
            };
            $('#saveAccessCodeBtn').addEventListener('click', () => saveSettings({ access_code: $('#accessCodeSetting').value }));
            $('#saveLiveDropBtn').addEventListener('click', () => saveSettings({ live_drop: { message: $('#liveDropMsg').value, active: $('#liveDropActive').checked }}));
        });
    </script>
</body>
</html>
